<?php
$TOC = array (
  0 => 
  array (
    0 => 'intro.cairo.php',
    1 => 'Introduction',
  ),
  1 => 
  array (
    0 => 'cairo.setup.php',
    1 => 'Installing/Configuring',
  ),
  2 => 
  array (
    0 => 'cairo.constants.php',
    1 => 'Predefined Constants',
  ),
  3 => 
  array (
    0 => 'cairo.examples.php',
    1 => 'Examples',
  ),
  4 => 
  array (
    0 => 'ref.cairo.php',
    1 => 'Cairo Functions',
  ),
  5 => 
  array (
    0 => 'class.cairo.php',
    1 => 'Cairo',
  ),
  6 => 
  array (
    0 => 'class.cairocontext.php',
    1 => 'CairoContext',
  ),
  7 => 
  array (
    0 => 'class.cairoexception.php',
    1 => 'CairoException',
  ),
  8 => 
  array (
    0 => 'class.cairostatus.php',
    1 => 'CairoStatus',
  ),
  9 => 
  array (
    0 => 'class.cairosurface.php',
    1 => 'CairoSurface',
  ),
  10 => 
  array (
    0 => 'class.cairosvgsurface.php',
    1 => 'CairoSvgSurface',
  ),
  11 => 
  array (
    0 => 'class.cairoimagesurface.php',
    1 => 'CairoImageSurface',
  ),
  12 => 
  array (
    0 => 'class.cairopdfsurface.php',
    1 => 'CairoPdfSurface',
  ),
  13 => 
  array (
    0 => 'class.cairopssurface.php',
    1 => 'CairoPsSurface',
  ),
  14 => 
  array (
    0 => 'class.cairosurfacetype.php',
    1 => 'CairoSurfaceType',
  ),
  15 => 
  array (
    0 => 'class.cairofontface.php',
    1 => 'CairoFontFace',
  ),
  16 => 
  array (
    0 => 'class.cairofontoptions.php',
    1 => 'CairoFontOptions',
  ),
  17 => 
  array (
    0 => 'class.cairofontslant.php',
    1 => 'CairoFontSlant',
  ),
  18 => 
  array (
    0 => 'class.cairofonttype.php',
    1 => 'CairoFontType',
  ),
  19 => 
  array (
    0 => 'class.cairofontweight.php',
    1 => 'CairoFontWeight',
  ),
  20 => 
  array (
    0 => 'class.cairoscaledfont.php',
    1 => 'CairoScaledFont',
  ),
  21 => 
  array (
    0 => 'class.cairotoyfontface.php',
    1 => 'CairoToyFontFace',
  ),
  22 => 
  array (
    0 => 'class.cairopatterntype.php',
    1 => 'CairoPatternType',
  ),
  23 => 
  array (
    0 => 'class.cairopattern.php',
    1 => 'CairoPattern',
  ),
  24 => 
  array (
    0 => 'class.cairogradientpattern.php',
    1 => 'CairoGradientPattern',
  ),
  25 => 
  array (
    0 => 'class.cairosolidpattern.php',
    1 => 'CairoSolidPattern',
  ),
  26 => 
  array (
    0 => 'class.cairosurfacepattern.php',
    1 => 'CairoSurfacePattern',
  ),
  27 => 
  array (
    0 => 'class.cairolineargradient.php',
    1 => 'CairoLinearGradient',
  ),
  28 => 
  array (
    0 => 'class.cairoradialgradient.php',
    1 => 'CairoRadialGradient',
  ),
  29 => 
  array (
    0 => 'class.cairoantialias.php',
    1 => 'CairoAntialias',
  ),
  30 => 
  array (
    0 => 'class.cairocontent.php',
    1 => 'CairoContent',
  ),
  31 => 
  array (
    0 => 'class.cairoextend.php',
    1 => 'CairoExtend',
  ),
  32 => 
  array (
    0 => 'class.cairoformat.php',
    1 => 'CairoFormat',
  ),
  33 => 
  array (
    0 => 'class.cairofillrule.php',
    1 => 'CairoFillRule',
  ),
  34 => 
  array (
    0 => 'class.cairofilter.php',
    1 => 'CairoFilter',
  ),
  35 => 
  array (
    0 => 'class.cairohintmetrics.php',
    1 => 'CairoHintMetrics',
  ),
  36 => 
  array (
    0 => 'class.cairohintstyle.php',
    1 => 'CairoHintStyle',
  ),
  37 => 
  array (
    0 => 'class.cairolinecap.php',
    1 => 'CairoLineCap',
  ),
  38 => 
  array (
    0 => 'class.cairolinejoin.php',
    1 => 'CairoLineJoin',
  ),
  39 => 
  array (
    0 => 'class.cairomatrix.php',
    1 => 'CairoMatrix',
  ),
  40 => 
  array (
    0 => 'class.cairooperator.php',
    1 => 'CairoOperator',
  ),
  41 => 
  array (
    0 => 'class.cairopath.php',
    1 => 'CairoPath',
  ),
  42 => 
  array (
    0 => 'class.cairopslevel.php',
    1 => 'CairoPsLevel',
  ),
  43 => 
  array (
    0 => 'class.cairosubpixelorder.php',
    1 => 'CairoSubpixelOrder',
  ),
  44 => 
  array (
    0 => 'class.cairosvgversion.php',
    1 => 'CairoSvgVersion',
  ),
);
$PARENTS = array (
  0 => 
  array (
    0 => 'refs.utilspec.image.php',
    1 => 'Image Processing and Generation',
  ),
  1 => 
  array (
    0 => 'funcref.php',
    1 => 'Function Reference',
  ),
  2 => 
  array (
    0 => 'index.php',
    1 => 'PHP Manual',
  ),
);