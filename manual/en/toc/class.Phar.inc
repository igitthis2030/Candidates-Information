<?php
$TOC = array (
  0 => 
  array (
    0 => 'phar.addemptydir.php',
    1 => 'Phar::addEmptyDir',
  ),
  1 => 
  array (
    0 => 'phar.addfile.php',
    1 => 'Phar::addFile',
  ),
  2 => 
  array (
    0 => 'phar.addfromstring.php',
    1 => 'Phar::addFromString',
  ),
  3 => 
  array (
    0 => 'phar.apiversion.php',
    1 => 'Phar::apiVersion',
  ),
  4 => 
  array (
    0 => 'phar.buildfromdirectory.php',
    1 => 'Phar::buildFromDirectory',
  ),
  5 => 
  array (
    0 => 'phar.buildfromiterator.php',
    1 => 'Phar::buildFromIterator',
  ),
  6 => 
  array (
    0 => 'phar.cancompress.php',
    1 => 'Phar::canCompress',
  ),
  7 => 
  array (
    0 => 'phar.canwrite.php',
    1 => 'Phar::canWrite',
  ),
  8 => 
  array (
    0 => 'phar.compress.php',
    1 => 'Phar::compress',
  ),
  9 => 
  array (
    0 => 'phar.compressallfilesbzip2.php',
    1 => 'Phar::compressAllFilesBZIP2',
  ),
  10 => 
  array (
    0 => 'phar.compressallfilesgz.php',
    1 => 'Phar::compressAllFilesGZ',
  ),
  11 => 
  array (
    0 => 'phar.compressfiles.php',
    1 => 'Phar::compressFiles',
  ),
  12 => 
  array (
    0 => 'phar.construct.php',
    1 => 'Phar::__construct',
  ),
  13 => 
  array (
    0 => 'phar.converttodata.php',
    1 => 'Phar::convertToData',
  ),
  14 => 
  array (
    0 => 'phar.converttoexecutable.php',
    1 => 'Phar::convertToExecutable',
  ),
  15 => 
  array (
    0 => 'phar.copy.php',
    1 => 'Phar::copy',
  ),
  16 => 
  array (
    0 => 'phar.count.php',
    1 => 'Phar::count',
  ),
  17 => 
  array (
    0 => 'phar.createdefaultstub.php',
    1 => 'Phar::createDefaultStub',
  ),
  18 => 
  array (
    0 => 'phar.decompress.php',
    1 => 'Phar::decompress',
  ),
  19 => 
  array (
    0 => 'phar.decompressfiles.php',
    1 => 'Phar::decompressFiles',
  ),
  20 => 
  array (
    0 => 'phar.delmetadata.php',
    1 => 'Phar::delMetadata',
  ),
  21 => 
  array (
    0 => 'phar.delete.php',
    1 => 'Phar::delete',
  ),
  22 => 
  array (
    0 => 'phar.extractto.php',
    1 => 'Phar::extractTo',
  ),
  23 => 
  array (
    0 => 'phar.getmetadata.php',
    1 => 'Phar::getMetaData',
  ),
  24 => 
  array (
    0 => 'phar.getmodified.php',
    1 => 'Phar::getModified',
  ),
  25 => 
  array (
    0 => 'phar.getsignature.php',
    1 => 'Phar::getSignature',
  ),
  26 => 
  array (
    0 => 'phar.getstub.php',
    1 => 'Phar::getStub',
  ),
  27 => 
  array (
    0 => 'phar.getsupportedcompression.php',
    1 => 'Phar::getSupportedCompression',
  ),
  28 => 
  array (
    0 => 'phar.getsupportedsignatures.php',
    1 => 'Phar::getSupportedSignatures',
  ),
  29 => 
  array (
    0 => 'phar.getversion.php',
    1 => 'Phar::getVersion',
  ),
  30 => 
  array (
    0 => 'phar.hasmetadata.php',
    1 => 'Phar::hasMetaData',
  ),
  31 => 
  array (
    0 => 'phar.interceptfilefuncs.php',
    1 => 'Phar::interceptFileFuncs',
  ),
  32 => 
  array (
    0 => 'phar.isbuffering.php',
    1 => 'Phar::isBuffering',
  ),
  33 => 
  array (
    0 => 'phar.iscompressed.php',
    1 => 'Phar::isCompressed',
  ),
  34 => 
  array (
    0 => 'phar.isfileformat.php',
    1 => 'Phar::isFileFormat',
  ),
  35 => 
  array (
    0 => 'phar.isvalidpharfilename.php',
    1 => 'Phar::isValidPharFilename',
  ),
  36 => 
  array (
    0 => 'phar.iswritable.php',
    1 => 'Phar::isWritable',
  ),
  37 => 
  array (
    0 => 'phar.loadphar.php',
    1 => 'Phar::loadPhar',
  ),
  38 => 
  array (
    0 => 'phar.mapphar.php',
    1 => 'Phar::mapPhar',
  ),
  39 => 
  array (
    0 => 'phar.mount.php',
    1 => 'Phar::mount',
  ),
  40 => 
  array (
    0 => 'phar.mungserver.php',
    1 => 'Phar::mungServer',
  ),
  41 => 
  array (
    0 => 'phar.offsetexists.php',
    1 => 'Phar::offsetExists',
  ),
  42 => 
  array (
    0 => 'phar.offsetget.php',
    1 => 'Phar::offsetGet',
  ),
  43 => 
  array (
    0 => 'phar.offsetset.php',
    1 => 'Phar::offsetSet',
  ),
  44 => 
  array (
    0 => 'phar.offsetunset.php',
    1 => 'Phar::offsetUnset',
  ),
  45 => 
  array (
    0 => 'phar.running.php',
    1 => 'Phar::running',
  ),
  46 => 
  array (
    0 => 'phar.setalias.php',
    1 => 'Phar::setAlias',
  ),
  47 => 
  array (
    0 => 'phar.setdefaultstub.php',
    1 => 'Phar::setDefaultStub',
  ),
  48 => 
  array (
    0 => 'phar.setmetadata.php',
    1 => 'Phar::setMetadata',
  ),
  49 => 
  array (
    0 => 'phar.setsignaturealgorithm.php',
    1 => 'Phar::setSignatureAlgorithm',
  ),
  50 => 
  array (
    0 => 'phar.setstub.php',
    1 => 'Phar::setStub',
  ),
  51 => 
  array (
    0 => 'phar.startbuffering.php',
    1 => 'Phar::startBuffering',
  ),
  52 => 
  array (
    0 => 'phar.stopbuffering.php',
    1 => 'Phar::stopBuffering',
  ),
  53 => 
  array (
    0 => 'phar.uncompressallfiles.php',
    1 => 'Phar::uncompressAllFiles',
  ),
  54 => 
  array (
    0 => 'phar.unlinkarchive.php',
    1 => 'Phar::unlinkArchive',
  ),
  55 => 
  array (
    0 => 'phar.webphar.php',
    1 => 'Phar::webPhar',
  ),
);
$PARENTS = array (
  0 => 
  array (
    0 => 'book.phar.php',
    1 => 'Phar',
  ),
  1 => 
  array (
    0 => 'refs.compression.php',
    1 => 'Compression and Archive Extensions',
  ),
  2 => 
  array (
    0 => 'funcref.php',
    1 => 'Function Reference',
  ),
  3 => 
  array (
    0 => 'index.php',
    1 => 'PHP Manual',
  ),
);